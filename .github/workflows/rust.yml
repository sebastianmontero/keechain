name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  audit:
    name: Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-args:
          [
            --no-default-features,
            --features gui,
          ]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Cache
      uses: actions/cache@v3
      if: ${{ matrix.build-args == '--no-default-features' }}
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml','**/Cargo.lock') }}
    - name: Format
      run: cargo fmt --all -- --config format_code_in_doc_comments=true --check
    - name: Install GUI dependencies
      if: ${{ matrix.build-args == '--features gui' }}
      run: sudo apt install build-essential libclang-dev libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libspeechd-dev libxkbcommon-dev libssl-dev
    - name: Build
      run: cargo build ${{ matrix.build-args }} --all
    - name: Tests
      run: cargo test ${{ matrix.build-args }} --all
    - name: Clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: ${{ matrix.build-args }} -- -D warnings